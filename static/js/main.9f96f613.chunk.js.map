{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","findSelected","find","tab","id","className","map","classNames","href","onClick","handleTabSelect","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAwB,SAAC,GAEhC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEjBC,EAAeH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQxE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,OACE,oBAEEE,UAAWE,IACT,MACA,CACE,YAAaJ,EAAIC,KAAOH,EAAaG,KAGzC,UAAQ,MARV,SAUE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,YAzBD,SAACN,GACnBA,EAAIC,KAAOL,GACbC,EAAcG,GAwBAO,CAAgBP,IAJpB,SAOGA,EAAIQ,SAhBFR,EAAIC,WAwBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAaW,cCnDTd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAwCC,mBAAShB,EAAK,IAAtD,mBAAOC,EAAP,KAAsBgB,EAAtB,KAEA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBN,EAAcY,SAGpC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EAAcK,GAC7BJ,cAAee,QCrBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9f96f613.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected : (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const findSelected = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleTabSelect = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            return (\n              <li\n                key={tab.id}\n                className={classNames(\n                  'tab',\n                  {\n                    'is-active': tab.id === findSelected.id,\n                  },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    handleTabSelect(tab);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {findSelected.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabId.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}